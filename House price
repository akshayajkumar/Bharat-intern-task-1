# Import necessary libraries
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Generate a synthetic dataset
np.random.seed(0)
n_samples = 100
sqft = np.random.randint(1000, 3000, n_samples)
bedrooms = np.random.randint(1, 5, n_samples)
bathrooms = np.random.randint(1, 4, n_samples)
price = 1000 * sqft + 500 * bedrooms + 2000 * bathrooms + np.random.normal(0, 1000, n_samples)

data = pd.DataFrame({'sqft': sqft, 'bedrooms': bedrooms, 'bathrooms': bathrooms, 'price': price})

# Define your features (X) and target variable (y)
X = data[['sqft', 'bedrooms', 'bathrooms']]
y = data['price']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()

# Fit the model to the training data
model.fit(X_train, y_train)

# Make predictions on the test data
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R-squared:", r2)
